/**
 * 定义应用路由
 */
import React from 'react';
import {
  Router,
  // browserHistory,
  hashHistory,
} from 'react-router';
import { Provider } from 'react-redux';

// 路由配置规则参考： https://github.com/ReactTraining/react-router/blob/v3/docs/guides/RouteConfiguration.md#configuration-with-plain-routes
// 一下部分是由 ICE 相关工具自动生成的路由，请勿随意改变，否则可能会出现一些异常情况
// <!-- auto generated routes start -->
import HiddenFile from './pages/HiddenFile';

import Preparation from './pages/Preparation';
import RroupError from './pages/RroupError';
import RealTimeData from './pages/RealTimeData';
import Wrong from './pages/Wrong';
import DataPic1 from './pages/DataPic1';
import DataPic from './pages/DataPic';
import NumberList from './pages/NumberList';
import EditUserSetting from './pages/EditUserSetting';
import AddPower from './pages/AddPower';
import AdministratorsList from './pages/AdministratorsList';
import Administrators from './pages/Administrators';
import RoleEditPage from './pages/RoleEditPage';
import UserRegister from './pages/UserRegister';
import LeaveList from './pages/LeaveList';
import RoleListPage from './pages/RoleListPage';
import RegisterManage from './pages/RegisterManage';
import StatusChange from './pages/StatusChange';
import GroupCheckList2 from './pages/GroupCheckList2';
import GroupCheckList1 from './pages/GroupCheckList1';
import GroupCheckList from './pages/GroupCheckList';
import StagetwoList from './pages/StagetwoList';
import Transcation from './pages/Transcation';
import TranscationList from './pages/TranscationList';
import Stagetwo from './pages/Stagetwo';
import StageoneList from './pages/StageoneList';
import Stageone from './pages/Stageone';
import Testcode from './pages/Testcode';
import Xiaoceshi from './pages/Xiaoceshi';
import Tiyanchanping from './pages/Tiyanchanping';
import TiyanchanpingList from './pages/TiyanchanpingList';
import Register from './pages/Register';
import TopicManage from './pages/TopicManage';
import TopicManageList from './pages/TopicManageList';
import UserSetting from './pages/UserSetting';
import ActivityClass from './pages/ActivityClass';
import ActivityClassList from './pages/ActivityClassList';
import Setting from './pages/Setting';
import BlankLayout from './layouts/BlankLayout';
import AuthRoute from './components/AuthRoute';
import Login from './pages/Login';
import HeaderAsideFooterResponsiveLayout from './layouts/HeaderAsideFooterResponsiveLayout';
import HeaderAsideFooterLayout from './layouts/HeaderAsideFooterLayout';
import Home from './pages/Home';
import HeaderFooterLayout from './layouts/HeaderFooterLayout';
import NotFound from './pages/NotFound';
import ActivityList from './pages/ActivityList';
import Activity from './pages/Activity';
import HaveNum from './pages/HaveNum';
import VideoUrl from './pages/VideoUrl';
import ColumnList from './pages/ColumnList';
import Column from './pages/Column';
import UserDetail from './pages/UserDetail';
import StaticsList from './pages/StaticsList'
import WrongRecord from './pages/WrongRecord'
import StaticsMore from './pages/StaticsMore'
import TransactionList from './pages/TransactionList'
const autoGeneratedRoutes = [
  {
    path:'recordTransaction',
    component: HeaderAsideFooterResponsiveLayout,
    indexRoute: {
      component: TransactionList
    }
  },
  {
    path: 'hiddenfile',
    childRoutes: [],
    component: HeaderAsideFooterResponsiveLayout,
    indexRoute: {
      component: HiddenFile
    }
  },
  {
    path: 'wrongrecord/:id',
    childRoutes: [],
    component: HeaderAsideFooterResponsiveLayout,
    indexRoute: {
      component: WrongRecord
    }
  },
  {
    path: 'staticsmore',
    childRoutes: [],
    component: HeaderAsideFooterResponsiveLayout,
    indexRoute: {
      component: StaticsMore
    }
  },
  {
  path: 'preparation/:id',
  childRoutes: [],
  component: HeaderAsideFooterResponsiveLayout,
  indexRoute: {
    component: Preparation
  }
},
  {
  path: 'grouperror/:id',
  childRoutes: [],
  component: HeaderAsideFooterResponsiveLayout,
  indexRoute: {
    component: RroupError
  }
},
  {
  path: 'realtimedata/:id',
  childRoutes: [],
  component: HeaderAsideFooterResponsiveLayout,
  indexRoute: {
    component: RealTimeData
  }
},
{
path: 'wrong/:id',
childRoutes: [],
component: HeaderAsideFooterResponsiveLayout,
indexRoute: {
  component: Wrong
}
},
{
path: 'datapic1/:id',
childRoutes: [],
component: HeaderAsideFooterResponsiveLayout,
indexRoute: {
  component: DataPic1
}
},
  {
  path: 'datapic/:id',
  childRoutes: [],
  component: HeaderAsideFooterResponsiveLayout,
  indexRoute: {
    component: DataPic
  }
},
  {
  path: 'recordid',
  childRoutes: [

  ],
  component: HeaderAsideFooterResponsiveLayout,
  indexRoute: {
    component: NumberList
  }
},
  {
  path: 'usersetting/:id',
  childRoutes: [],
  component: HeaderAsideFooterResponsiveLayout,
  indexRoute: {
    component: EditUserSetting
  }
},
{
  path: 'userdetail/:id',
  childRoutes: [],
  component: HeaderAsideFooterResponsiveLayout,
  indexRoute: {
    component: UserDetail
  }
},
  {
  path: 'AddPower/:id',
  childRoutes: [],
  component: HeaderAsideFooterResponsiveLayout,
  indexRoute: {
    component: AddPower
  }
},
  {
  path: 'administratorsList',
  childRoutes: [],
  component: HeaderAsideFooterResponsiveLayout,
  indexRoute: {
    component: AdministratorsList
  }
},
{
path: 'administrators/:id',
childRoutes: [],
component: HeaderAsideFooterResponsiveLayout,
indexRoute: {
  component: Administrators
}
},
  {
  path: 'leavelist',
  childRoutes: [],
  component: HeaderAsideFooterResponsiveLayout,
  indexRoute: {
    component: LeaveList
  }
},
  {
  path: 'registermanage',
  childRoutes: [],
  component: HeaderAsideFooterResponsiveLayout,
  indexRoute: {
    component: RegisterManage
  }
},
  {
  path: 'rolelistpage',
  childRoutes: [],
  component: HeaderAsideFooterResponsiveLayout,
  indexRoute: {
    component: RoleListPage
  }
},
{
path: 'roleEditPage/:id',
childRoutes: [],
component: HeaderAsideFooterResponsiveLayout,
indexRoute: {
  component: RoleEditPage
}
},
  {
  path: 'statuschange/:id',
  childRoutes: [],
  component: HeaderAsideFooterResponsiveLayout,
  indexRoute: {
    component: StatusChange
  }
},
{
path: 'groupchecklist1/:id',
childRoutes: [],
component: HeaderAsideFooterResponsiveLayout,
indexRoute: {
  component: GroupCheckList1
}
},
{
path: 'groupchecklist2/:id',
childRoutes: [],
component: HeaderAsideFooterResponsiveLayout,
indexRoute: {
  component: GroupCheckList2
}
},
  {
  path: 'groupchecklist/:id',
  childRoutes: [],
  component: HeaderAsideFooterResponsiveLayout,
  indexRoute: {
    component: GroupCheckList
  }
},
{
path: 'transcationlist',
childRoutes: [],
component: HeaderAsideFooterResponsiveLayout,
indexRoute: {
  component: TranscationList
}
},
{
path: 'transcation/:id',
childRoutes: [],
component: HeaderAsideFooterResponsiveLayout,
indexRoute: {
  component: Transcation
}
},
  {
  path: 'stageonelist',
  childRoutes: [],
  component: HeaderAsideFooterResponsiveLayout,
  indexRoute: {
    component: StageoneList
  }
},
  {
  path: 'stageone/:id',
  childRoutes: [],
  component: HeaderAsideFooterResponsiveLayout,
  indexRoute: {
    component: Stageone
  }
},
{
path: 'stagetwolist',
childRoutes: [],
component: HeaderAsideFooterResponsiveLayout,
indexRoute: {
  component: StagetwoList
}
},
{
path: 'stagetwo/:id',
childRoutes: [],
component: HeaderAsideFooterResponsiveLayout,
indexRoute: {
  component: Stagetwo
}
},

  {
  path: 'testcode/:id',
  childRoutes: [],
  component: HeaderAsideFooterResponsiveLayout,
  indexRoute: {
    component: Testcode
  }
},
  {
  path: 'columnclass/3/:id',
  childRoutes: [],
  component: HeaderAsideFooterResponsiveLayout,
  indexRoute: {
    component: Xiaoceshi
  }
},
  {
  path: 'columnclass/0/:id',
  childRoutes: [],
  component: HeaderAsideFooterResponsiveLayout,
  indexRoute: {
    component: TiyanchanpingList
  }
},
{
path: 'columnclass/2/:id',
childRoutes: [],
component: HeaderAsideFooterResponsiveLayout,
indexRoute: {
  component: VideoUrl
}
},
{
path: 'columnclass/0/:id/:sid',
childRoutes: [],
component: HeaderAsideFooterResponsiveLayout,
indexRoute: {
  component: Tiyanchanping
}
},
  {
  path: 'column/:activityId',
  childRoutes: [],
  component: HeaderAsideFooterResponsiveLayout,
  indexRoute: {
    component: Column
  }
},
{
  path: 'columnList',
  childRoutes: [],
  component: HeaderAsideFooterResponsiveLayout,
  indexRoute: {
    component: ColumnList
  }
},
  {
  path: 'columnclass/1/:id',
  childRoutes: [],
  component: HeaderAsideFooterResponsiveLayout,
  indexRoute: {
    component: HaveNum
  }
},

  {
  path: 'register',
  childRoutes: [],
  component: BlankLayout,
  indexRoute: {
    component: Register
  }
  },




  {
  path: 'activityList',
  childRoutes: [],
  component: HeaderAsideFooterResponsiveLayout,
  indexRoute: {
    component: ActivityList
  }
},

{
path: 'topicmanage/:id',
childRoutes: [],
component: HeaderAsideFooterResponsiveLayout,
indexRoute: {
  component: TopicManage
}
},
{
path: 'topicmanagelist',
childRoutes: [],
component: HeaderAsideFooterResponsiveLayout,
indexRoute: {
  component: TopicManageList
}
},


{
  path: 'usersetting',
  childRoutes: [],
  component: HeaderAsideFooterResponsiveLayout,
  indexRoute: {
    component: UserSetting
  }
},

 {
  path: 'Setting',
  childRoutes: [],
  component: HeaderAsideFooterResponsiveLayout,
  indexRoute: {
    component: Setting
  }
}, {
  path: 'Login',
  childRoutes: [],
  component: BlankLayout,
  indexRoute: {
    component: Login
  }
},
{
  path: 'userregister',
  childRoutes: [],
  component: BlankLayout,
  indexRoute: {
    component: UserRegister
  }
},
{
  path: 'Home',
  childRoutes: [],
  component: HeaderAsideFooterResponsiveLayout,
  indexRoute: {
    component: Home
  }
},
{
  path: 'activity/:activityId',
  childRoutes: [],
  component: HeaderAsideFooterResponsiveLayout,
  indexRoute: {
    component: Activity
  }
},
{
  path: '/home',
  childRoutes: [{
    path: '*',
    childRoutes: [],
    component: NotFound
  }],
  component: HeaderAsideFooterResponsiveLayout,
  indexRoute: {
    component: Home
  }
},

/**
 * 阶段测试统计
 */
{
  path:'/statistics/:id',
  childRoutes:[],
  component:HeaderAsideFooterResponsiveLayout,
  indexRoute:{
    component:StaticsList
  }
}

];
// <!-- auto generated routes end -->

// 自定义路由，如果 path 相同则会覆盖自动生成部分的路由配置
const customRoutes = [];

const RouterMap = ({ store }) => (
  <Provider store={store}>
    <div>
      <AuthRoute history={hashHistory}></AuthRoute>
      <Router
        history={hashHistory}
        routes={[...autoGeneratedRoutes, ...customRoutes]}
      />
    </div>
  </Provider>
);
export default RouterMap
